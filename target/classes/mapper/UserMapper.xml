<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gdufs.agency.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="gdufs.agency.entity.User" >
    <id column="studentId" property="studentid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phoneNum" property="phonenum" jdbcType="VARCHAR" />
    <result column="academy" property="academy" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    studentId, username, password, phoneNum, academy, address, balance
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from User
    where studentId = #{studentid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from User
    where studentId = #{studentid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="gdufs.agency.entity.User" >
    insert into User (studentId, username, password, 
      phoneNum, academy, address, 
      balance)
    values (#{studentid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phonenum,jdbcType=VARCHAR}, #{academy,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="gdufs.agency.entity.User" >
    insert into User
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="academy != null" >
        academy,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="balance != null" >
        balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="gdufs.agency.entity.User" >
    update User
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = balance+#{balance,jdbcType=DOUBLE},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="gdufs.agency.entity.User" >
    update User
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DOUBLE}
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>
</mapper>